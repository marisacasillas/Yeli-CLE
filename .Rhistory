hsz.sd = sd(household_size)
)
# Merge in participant and segment info to the main data table
codes <- all.data %>% filter(tier == "clip")
all.data <- all.data %>%
filter(speaker != "") %>%
left_join(ptcp.info, by = "aclew_child_id") %>%
mutate(segment = "", sample = "",
sample_type = "", segment_dur = 0)
for (i in 1:nrow(codes)) {
rec <- codes$aclew_child_id[i]
seg <- as.character(codes$val[i])
seg.on <- codes$start[i]
seg.off <- codes$stop[i]
seg.idx <- which(all.data$aclew_child_id == rec &
all.data$start < seg.off &
all.data$stop > seg.on)
all.data$segment[seg.idx] <- seg
}
# Label samples
all.data$sample[which(
grepl('^random', all.data$segment))] <- "random"
all.data$sample[which(
grepl('tt', all.data$segment))] <- "turn-taking"
all.data$sample[which(
grepl('va', all.data$segment))] <- "high-activity"
# Remove utterances that occur outside of the sample
all.data <- filter(all.data, sample != "")
# Clip utterances that start/end outside of the sampled clips
seg.on.off <- seg.info %>% select(aclew_child_id, start, stop, val) %>%
rename(seg_start = "start", seg_stop = "stop", segment = val)
# ...because of the split extensions with the same names
# we have to be cautious
for (i in 1:nrow(seg.on.off)) {
over.left.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$start < seg.on.off$seg_start[i])
over.right.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$stop > seg.on.off$seg_stop[i])
if (length(over.left.edge.idx) > 0) {
all.data$start[over.left.edge.idx] <- seg.on.off$seg_start[i]
}
if (length(over.right.edge.idx) > 0) {
all.data$stop[over.right.edge.idx] <- seg.on.off$seg_stop[i]
}
}
# Label sample types and durations
random.samples <- which(grepl('^random', all.data$segment))
all.data$sample_type[random.samples] <- "random"
all.data$segment_dur[random.samples] <- rand.sample.dur
ext.samples <- which(grepl('^extension', all.data$segment))
all.data$sample_type[ext.samples] <- "extension"
all.data$segment_dur[ext.samples] <- 5
tt.samples <- which(grepl('^tt', all.data$segment))
all.data$sample_type[tt.samples] <- "turn-taking"
all.data$segment_dur[tt.samples] <- 1
va.samples <- which(grepl('^va', all.data$segment))
all.data$sample_type[va.samples] <- "turn-taking"
all.data$segment_dur[va.samples] <- 1
# Add in segment start time
all.data <- all.data %>%
left_join(dplyr::select(seg.info, c("aclew_child_id", "val", "start.hhmmss",
"start.sec", "start.hr")),
by = c("aclew_child_id" = "aclew_child_id", "segment" = "val"))
sample.demog <- ptcp.info %>%
mutate(mat_age_rd = as.integer(round(mat_age, 0)),
fat_age_rd = as.integer(round(fat_age, 0)),
hszrd = as.integer(round(household_size + 1, 0))) %>%
select(age, child_sex, mat_age_rd, mat_ed, hszrd) %>%
rename("Age" = age, "Sex" = child_sex,
"Mother's age" = mat_age_rd, "Level of maternal education" = mat_ed,
"People in household" = hszrd)
ptcp.info <- ptcp.info %>%
arrange(age_mo_round) %>%
mutate(order = seq(1:10))
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val)) %>%
group_by(aclew_child_id, alt.seg.name) %>%
summarize(start.hhmmss = min(start.hhmmss),
start.hr = min(start.hr),
start.rec.hr = min(start_of_recording.ms)/3600000,
end.rec.hr = min(stop_of_recording.ms)/3600000) %>%
rename(segment = alt.seg.name) %>%
mutate(sample.type = case_when(
grepl('random', segment) ~ "Random",
grepl('tt', segment) ~ "Turn taking",
grepl('va', segment) ~ "Vocal activity")) %>%
left_join(ptcp.info)
used.clips$sample.type = factor(used.clips$sample.type,
levels = c("Random", "Turn taking", "Vocal activity"))
ggplot(data = used.clips) +
geom_segment(aes(x = start.rec.hr, y = order, xend = end.rec.hr, yend = order))
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val)) %>%
group_by(aclew_child_id, alt.seg.name) %>%
summarize(start.hhmmss = min(start.hhmmss),
start.hr = min(start.hr),
start.rec.hr = min(start_of_recording.ms)/3600000,
end.rec.hr = min(stop_of_recording.ms)/3600000,
nclips = n()) %>%
rename(segment = alt.seg.name)
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val))
150000/60000
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val)) %>%
group_by(aclew_child_id, alt.seg.name) %>%
summarize(start.hhmmss = min(start.hhmmss),
start.hr = min(start.hr),
start.rec.hr = min(start_of_recording.ms)/3600000,
end.rec.hr = min(stop_of_recording.ms)/3600000,
clip.dur = sum(dur)/60000) %>%
rename(segment = alt.seg.name) %>%
mutate(sample.type = case_when(
grepl('random', segment) ~ "Random",
grepl('tt', segment) ~ "Turn taking",
grepl('va', segment) ~ "Vocal activity")) %>%
left_join(ptcp.info)
ggplot(data = used.clips) +
geom_segment(aes(x = start.rec.hr, y = order, xend = end.rec.hr, yend = order)) +
geom_segment(aes(x = start.hr, y = order, xend = start.hr + clip.dur/60, yend = order,
color = sample.type), size = 3) +
theme_apa() +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = 7:21) +
scale_y_continuous(breaks = 1:10, labels = ptcp.info$age_mo_round) +
ylab("Child age (mo)") + xlab("Time of day (hr)") + labs(color = "Sample type") +
scale_color_manual(values = c(viridis(3)[1], viridis(3)[2], "blue"))
clip.distribution <- ggplot(data = used.clips) +
geom_segment(data = filter(used.clips, segment == "random-1"),
aes(x = start.rec.hr, y = order,
xend = end.rec.hr, yend = order)) +
geom_segment(aes(x = start.hr, y = order,
xend = start.hr + clip.dur/60, yend = order,
color = sample.type), size = 3) +
theme_apa() +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = 7:21) +
scale_y_continuous(breaks = 1:10, labels = ptcp.info$age_mo_round) +
ylab("Child age (mo)") + xlab("Time of day (hr)") + labs(color = "Sample type") +
scale_color_manual(values = c(viridis(3)[1], viridis(3)[2], "blue"))
clip.distribution
clip.distribution
clip.distribution
start.sec
start.sec/60000
start.sec/3600
# Read in annotation files
files <- list.files(path=data.path,pattern="*.txt")
all.data <- data.frame()
for (i in 1:length(files)) {
#  print(files[i])
newfile <- read_csv(paste0(data.path, files[i]),
col_types = cols(val = col_character()))
newfile$aclew_child_id <- unlist(strsplit(files[i], '\\.'))[1]
all.data <- rbind(all.data, newfile)
}
all.data$row <- c(1:nrow(all.data))
# Read in supplementary data
ptcp.info <- read_csv(ptcp.info.file, col_types = cols()) %>%
dplyr::select(-row)
ptcp.info$aclew_child_id <- as.character(ptcp.info$aclew_child_id)
# Extract and convert start time of each sample
rec.time.info <- ptcp.info %>%
select(aclew_child_id, start_of_recording, length_of_recording) %>%
mutate(
start.hh = substr(start_of_recording, 1, 2),
start.mm = substr(start_of_recording, 4, 5),
start.ss = substr(start_of_recording, 7, 8),
start_of_recording.ms = period_to_seconds(hms(start_of_recording))*1000,
stop_of_recording.ms = start_of_recording.ms + length_of_recording*1000,
stop_of_recording = paste(
str_pad(hour(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"),
str_pad(minute(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"),
str_pad(second(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"), sep = ":"),
length_of_recording.ms = length_of_recording*1000) %>%
rename(length_of_recording.s = length_of_recording) %>%
select(aclew_child_id,
start_of_recording, stop_of_recording, length_of_recording.s,
start_of_recording.ms, stop_of_recording.ms, length_of_recording.ms,
start.hh, start.mm, start.ss)
seg.info <- filter(all.data, tier == "clip") %>%
select(-tier, -speaker, -row) %>%
left_join(rec.time.info) %>%
mutate(
start.ms = start_of_recording.ms + start,
start.sec = start.ms/1000,
start.hhmmss = paste(
str_pad(hour(seconds_to_period(start.sec)), 2, "left", pad = "0"),
str_pad(minute(seconds_to_period(start.sec)), 2, "left", pad = "0"),
str_pad(second(seconds_to_period(start.sec)), 2, "left", pad = "0"), sep = ":"),
start.hr = start.ms/3600)
# Add mean and sd values for participant-level predictors to ptcp.info
ptcp.info <- ptcp.info %>%
mutate(
tchiyr.m = mean(age_mo_round),
motyr.m = mean(mat_age),
nsb.m = mean(number_older_sibs),
hsz.m = mean(household_size),
tchiyr.sd = sd(age_mo_round),
motyr.sd = sd(mat_age),
nsb.sd = sd(number_older_sibs),
hsz.sd = sd(household_size)
)
# Merge in participant and segment info to the main data table
codes <- all.data %>% filter(tier == "clip")
all.data <- all.data %>%
filter(speaker != "") %>%
left_join(ptcp.info, by = "aclew_child_id") %>%
mutate(segment = "", sample = "",
sample_type = "", segment_dur = 0)
for (i in 1:nrow(codes)) {
rec <- codes$aclew_child_id[i]
seg <- as.character(codes$val[i])
seg.on <- codes$start[i]
seg.off <- codes$stop[i]
seg.idx <- which(all.data$aclew_child_id == rec &
all.data$start < seg.off &
all.data$stop > seg.on)
all.data$segment[seg.idx] <- seg
}
# Label samples
all.data$sample[which(
grepl('^random', all.data$segment))] <- "random"
all.data$sample[which(
grepl('tt', all.data$segment))] <- "turn-taking"
all.data$sample[which(
grepl('va', all.data$segment))] <- "high-activity"
# Remove utterances that occur outside of the sample
all.data <- filter(all.data, sample != "")
# Clip utterances that start/end outside of the sampled clips
seg.on.off <- seg.info %>% select(aclew_child_id, start, stop, val) %>%
rename(seg_start = "start", seg_stop = "stop", segment = val)
# ...because of the split extensions with the same names
# we have to be cautious
for (i in 1:nrow(seg.on.off)) {
over.left.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$start < seg.on.off$seg_start[i])
over.right.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$stop > seg.on.off$seg_stop[i])
if (length(over.left.edge.idx) > 0) {
all.data$start[over.left.edge.idx] <- seg.on.off$seg_start[i]
}
if (length(over.right.edge.idx) > 0) {
all.data$stop[over.right.edge.idx] <- seg.on.off$seg_stop[i]
}
}
# Label sample types and durations
random.samples <- which(grepl('^random', all.data$segment))
all.data$sample_type[random.samples] <- "random"
all.data$segment_dur[random.samples] <- rand.sample.dur
ext.samples <- which(grepl('^extension', all.data$segment))
all.data$sample_type[ext.samples] <- "extension"
all.data$segment_dur[ext.samples] <- 5
tt.samples <- which(grepl('^tt', all.data$segment))
all.data$sample_type[tt.samples] <- "turn-taking"
all.data$segment_dur[tt.samples] <- 1
va.samples <- which(grepl('^va', all.data$segment))
all.data$sample_type[va.samples] <- "turn-taking"
all.data$segment_dur[va.samples] <- 1
# Add in segment start time
all.data <- all.data %>%
left_join(dplyr::select(seg.info, c("aclew_child_id", "val", "start.hhmmss",
"start.sec", "start.hr")),
by = c("aclew_child_id" = "aclew_child_id", "segment" = "val"))
ptcp.info <- ptcp.info %>%
arrange(age_mo_round) %>%
mutate(order = seq(1:10))
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val)) %>%
group_by(aclew_child_id, alt.seg.name) %>%
summarize(start.hhmmss = min(start.hhmmss),
start.hr = min(start.hr),
start.rec.hr = min(start_of_recording.ms)/3600000,
end.rec.hr = min(stop_of_recording.ms)/3600000,
clip.dur = sum(dur)/60000) %>%
rename(segment = alt.seg.name) %>%
mutate(sample.type = case_when(
grepl('random', segment) ~ "Random",
grepl('tt', segment) ~ "Turn taking",
grepl('va', segment) ~ "Vocal activity")) %>%
left_join(ptcp.info)
used.clips$sample.type = factor(used.clips$sample.type,
levels = c("Random", "Turn taking", "Vocal activity"))
clip.distribution <- ggplot(data = used.clips) +
geom_segment(data = filter(used.clips, segment == "random-1"),
aes(x = start.rec.hr, y = order,
xend = end.rec.hr, yend = order)) +
geom_segment(aes(x = start.hr, y = order,
xend = start.hr + clip.dur/60, yend = order,
color = sample.type), size = 3) +
theme_apa() +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = 7:21) +
scale_y_continuous(breaks = 1:10, labels = ptcp.info$age_mo_round) +
ylab("Child age (mo)") + xlab("Time of day (hr)") + labs(color = "Sample type") +
scale_color_manual(values = c(viridis(3)[1], viridis(3)[2], "blue"))
clip.distribution
start.ms
/3600000
start.ms/3600000
# Read in annotation files
files <- list.files(path=data.path,pattern="*.txt")
all.data <- data.frame()
for (i in 1:length(files)) {
#  print(files[i])
newfile <- read_csv(paste0(data.path, files[i]),
col_types = cols(val = col_character()))
newfile$aclew_child_id <- unlist(strsplit(files[i], '\\.'))[1]
all.data <- rbind(all.data, newfile)
}
all.data$row <- c(1:nrow(all.data))
# Read in supplementary data
ptcp.info <- read_csv(ptcp.info.file, col_types = cols()) %>%
dplyr::select(-row)
ptcp.info$aclew_child_id <- as.character(ptcp.info$aclew_child_id)
# Extract and convert start time of each sample
rec.time.info <- ptcp.info %>%
select(aclew_child_id, start_of_recording, length_of_recording) %>%
mutate(
start.hh = substr(start_of_recording, 1, 2),
start.mm = substr(start_of_recording, 4, 5),
start.ss = substr(start_of_recording, 7, 8),
start_of_recording.ms = period_to_seconds(hms(start_of_recording))*1000,
stop_of_recording.ms = start_of_recording.ms + length_of_recording*1000,
stop_of_recording = paste(
str_pad(hour(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"),
str_pad(minute(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"),
str_pad(second(seconds_to_period(stop_of_recording.ms/1000)), 2, "left", pad = "0"), sep = ":"),
length_of_recording.ms = length_of_recording*1000) %>%
rename(length_of_recording.s = length_of_recording) %>%
select(aclew_child_id,
start_of_recording, stop_of_recording, length_of_recording.s,
start_of_recording.ms, stop_of_recording.ms, length_of_recording.ms,
start.hh, start.mm, start.ss)
seg.info <- filter(all.data, tier == "clip") %>%
select(-tier, -speaker, -row) %>%
left_join(rec.time.info) %>%
mutate(
start.ms = start_of_recording.ms + start,
start.sec = start.ms/1000,
start.hhmmss = paste(
str_pad(hour(seconds_to_period(start.sec)), 2, "left", pad = "0"),
str_pad(minute(seconds_to_period(start.sec)), 2, "left", pad = "0"),
str_pad(second(seconds_to_period(start.sec)), 2, "left", pad = "0"), sep = ":"),
start.hr = start.ms/3600000)
# Add mean and sd values for participant-level predictors to ptcp.info
ptcp.info <- ptcp.info %>%
mutate(
tchiyr.m = mean(age_mo_round),
motyr.m = mean(mat_age),
nsb.m = mean(number_older_sibs),
hsz.m = mean(household_size),
tchiyr.sd = sd(age_mo_round),
motyr.sd = sd(mat_age),
nsb.sd = sd(number_older_sibs),
hsz.sd = sd(household_size)
)
# Merge in participant and segment info to the main data table
codes <- all.data %>% filter(tier == "clip")
all.data <- all.data %>%
filter(speaker != "") %>%
left_join(ptcp.info, by = "aclew_child_id") %>%
mutate(segment = "", sample = "",
sample_type = "", segment_dur = 0)
for (i in 1:nrow(codes)) {
rec <- codes$aclew_child_id[i]
seg <- as.character(codes$val[i])
seg.on <- codes$start[i]
seg.off <- codes$stop[i]
seg.idx <- which(all.data$aclew_child_id == rec &
all.data$start < seg.off &
all.data$stop > seg.on)
all.data$segment[seg.idx] <- seg
}
# Label samples
all.data$sample[which(
grepl('^random', all.data$segment))] <- "random"
all.data$sample[which(
grepl('tt', all.data$segment))] <- "turn-taking"
all.data$sample[which(
grepl('va', all.data$segment))] <- "high-activity"
# Remove utterances that occur outside of the sample
all.data <- filter(all.data, sample != "")
# Clip utterances that start/end outside of the sampled clips
seg.on.off <- seg.info %>% select(aclew_child_id, start, stop, val) %>%
rename(seg_start = "start", seg_stop = "stop", segment = val)
# ...because of the split extensions with the same names
# we have to be cautious
for (i in 1:nrow(seg.on.off)) {
over.left.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$start < seg.on.off$seg_start[i])
over.right.edge.idx <- which(all.data$aclew_child_id == seg.on.off$aclew_child_id[i] &
all.data$start < seg.on.off$seg_stop[i] &
all.data$stop > seg.on.off$seg_start[i] &
all.data$stop > seg.on.off$seg_stop[i])
if (length(over.left.edge.idx) > 0) {
all.data$start[over.left.edge.idx] <- seg.on.off$seg_start[i]
}
if (length(over.right.edge.idx) > 0) {
all.data$stop[over.right.edge.idx] <- seg.on.off$seg_stop[i]
}
}
# Label sample types and durations
random.samples <- which(grepl('^random', all.data$segment))
all.data$sample_type[random.samples] <- "random"
all.data$segment_dur[random.samples] <- rand.sample.dur
ext.samples <- which(grepl('^extension', all.data$segment))
all.data$sample_type[ext.samples] <- "extension"
all.data$segment_dur[ext.samples] <- 5
tt.samples <- which(grepl('^tt', all.data$segment))
all.data$sample_type[tt.samples] <- "turn-taking"
all.data$segment_dur[tt.samples] <- 1
va.samples <- which(grepl('^va', all.data$segment))
all.data$sample_type[va.samples] <- "turn-taking"
all.data$segment_dur[va.samples] <- 1
# Add in segment start time
all.data <- all.data %>%
left_join(dplyr::select(seg.info, c("aclew_child_id", "val", "start.hhmmss",
"start.sec", "start.hr")),
by = c("aclew_child_id" = "aclew_child_id", "segment" = "val"))
ptcp.info <- ptcp.info %>%
arrange(age_mo_round) %>%
mutate(order = seq(1:10))
used.clips <- seg.info %>%
mutate(
alt.seg.name = gsub("ext-", "", val)) %>%
group_by(aclew_child_id, alt.seg.name) %>%
summarize(start.hhmmss = min(start.hhmmss),
start.hr = min(start.hr),
start.rec.hr = min(start_of_recording.ms)/3600000,
end.rec.hr = min(stop_of_recording.ms)/3600000,
clip.dur = sum(dur)/60000) %>%
rename(segment = alt.seg.name) %>%
mutate(sample.type = case_when(
grepl('random', segment) ~ "Random",
grepl('tt', segment) ~ "Turn taking",
grepl('va', segment) ~ "Vocal activity")) %>%
left_join(ptcp.info)
used.clips$sample.type = factor(used.clips$sample.type,
levels = c("Random", "Turn taking", "Vocal activity"))
clip.distribution <- ggplot(data = used.clips) +
geom_segment(data = filter(used.clips, segment == "random-1"),
aes(x = start.rec.hr, y = order,
xend = end.rec.hr, yend = order)) +
geom_segment(aes(x = start.hr, y = order,
xend = start.hr + clip.dur/60, yend = order,
color = sample.type), size = 3) +
theme_apa() +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = 7:21) +
scale_y_continuous(breaks = 1:10, labels = ptcp.info$age_mo_round) +
ylab("Child age (mo)") + xlab("Time of day (hr)") + labs(color = "Sample type") +
scale_color_manual(values = c(viridis(3)[1], viridis(3)[2], "blue"))
clip.distribution
clip.distribution
install.packages("papaka")
install.packages("papaja")
devtools::install_github("crsh/papaja")
library(papaja)
library(ggplot2)
library(tidyverse)
library(viridis)
library(grid)
library(gridExtra)
library(ggpirate)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(bbmle)
library(broom.mixed)
library(lubridate)
installed.packages("gridExtra", "ggpirate", "lme4", "glmmTMB", "DHARMa", "bbmle", "broom.mixed")
installed.packages(c("gridExtra", "ggpirate", "lme4", "glmmTMB", "DHARMa", "bbmle", "broom.mixed"))
installed.packages("gridExtra")
install.packages("gridExtra", "ggpirate", "lme4", "glmmTMB", "DHARMa", "bbmle", "broom.mixed")
install.packages("gridExtra")
install.packages("ggpirate")
install.packages("lme4")
install.packages("glmmTMB")
install.packages("gridExtra", "ggpirate", "lme4", "glmmTMB", "DHARMa", "bbmle", "broom.mixed")
install.packages("DHARMa"")
install.packages("DHARMa")
install.packages("bbmle")
install.packages("broom.mixed")
library(papaja)
library(ggplot2)
library(tidyverse)
library(viridis)
library(grid)
library(gridExtra)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(bbmle)
library(broom.mixed)
library(lubridate)
install.packages("viridis")
